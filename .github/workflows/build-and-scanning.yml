name: Docker Build and Image Scanning

on:
  workflow_call:
    inputs:
      # working-diretory is added to specify "terraform" directory in project source code as that's where the terraform files live.
      docker-image:
        required: false
        type: string
        default: 'docker.io/jingood2/petclinic-demo'

permissions: write-all

jobs:
  #label:
  #  name: Check Labels
  #  runs-on: ubuntu-latest
  #  steps:
      #- name: Has semver label
      #  uses: jesusvasquez333/verify-pr-label-action@v1.4.0
      #  with:
      #    github-token: ${{ secrets.GITHUB_TOKEN }}
      #    valid-labels: 'major, minor, patch'
      #    pull-request-number: ${{ github.event.pull_request.number }}
      #    disable-reviews: true

  #    - name: Has change type label
  #      uses: jesusvasquez333/verify-pr-label-action@v1.4.0
  #      with:
  #        github-token: ${{ secrets.GITHUB_TOKEN }}
  #        valid-labels: 'feature, enhancement, fix, bugfix, bug, chore'
  #        pull-request-number: ${{ github.event.pull_request.number }}
  #        disable-reviews: true
  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

   

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
        
      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually (see below).
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build-and-push:
    runs-on: ubuntu-latest
    needs: [codeql-analysis]
    env:
      DOCKER_IMAGE: ${{ inputs.docker-image}}:${{ github.sha }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      # ToDo: Add Slack Notification

      - name: Run Trivy SBOM analysis
        uses: docker://aquasec/trivy:latest
        with:
          args: sbom --format cyclonedx 

      - name: Upload SBOM to artifact storage
        uses: actions/upload-artifact@v1
        with:
          name: trivy-sbom
          path: sbom.xml

  trivy-analysis:
    runs-on: ubuntu-latest
    needs: [build-and-push]

    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/jingood2/petclinic-demo:${{ github.sha }}'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

    #- name: Setup Trivy
    #  uses: actions/setup-docker@v1
    #  with:
    #    tags: latest